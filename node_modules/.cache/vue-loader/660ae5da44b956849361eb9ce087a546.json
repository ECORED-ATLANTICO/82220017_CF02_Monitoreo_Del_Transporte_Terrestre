{"remainingRequest":"/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/ecored-pkg-fliz/plugin/components/SlyderF.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/ecored-pkg-fliz/plugin/components/SlyderF.vue","mtime":1756095210395},{"path":"/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/babel-loader/lib/index.js","mtime":1756095209525},{"path":"/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/cache-loader/dist/cjs.js","mtime":1756095208955},{"path":"/home/runner/work/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/82220017_CF02_Monitoreo_Del_Transporte_Terrestre/node_modules/vue-loader/lib/index.js","mtime":1756095209635}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTY3JvbGxIb3Jpem9udGFsIGZyb20gJy4vU2Nyb2xsSG9yaXpvbnRhbCcKaW1wb3J0IGNvbXBvbmVudFNsb3RNaXhpbnMgZnJvbSAnLi9jb21wb25lbnRTbG90TWl4aW5zJwppbXBvcnQgc2x5ZGVyTWl4aW5zIGZyb20gJy4vc2x5ZGVyTWl4aW5zJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NseWRlckYnLAogIGNvbXBvbmVudHM6IHsgU2Nyb2xsSG9yaXpvbnRhbCB9LAogIG1peGluczogW2NvbXBvbmVudFNsb3RNaXhpbnMsIHNseWRlck1peGluc10sCiAgcHJvcHM6IHsKICAgIGNvbHVtbmFzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzRmlyc3QoKSB7CiAgICAgIGlmICghdGhpcy5lbGVtZW50cy5sZW5ndGgpIHJldHVybiB0cnVlCiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkID09PSB0aGlzLmVsZW1lbnRzWzBdLmlkCiAgICB9LAogICAgaXNMYXN0KCkgewogICAgICBpZiAoIXRoaXMuZWxlbWVudHMubGVuZ3RoKSByZXR1cm4gdHJ1ZQogICAgICAvL2NvbnN0IHZpc2libGVDb3VudCA9IHRoaXMuZ2V0VmlzaWJsZUNhcmRzQ291bnQoKQogICAgICBjb25zdCB2aXNpYmxlcyA9IHRoaXMuZ2V0VmlzaWJsZVNsaWRlcygpCiAgICAgIGNvbnNvbGUubG9nKCd2aXNpYmxlcycsIHZpc2libGVzKQoKICAgICAgY29uc3QgaWRzID0gdGhpcy5lbGVtZW50cy5tYXAoZSA9PiBlLmlkKQogICAgICBjb25zdCBpZHggPSBpZHMuaW5kZXhPZih0aGlzLnNlbGVjdGVkKQogICAgICByZXR1cm4gaWR4ID49IGlkcy5sZW5ndGggLSB2aXNpYmxlcwogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGNsaWNrQW50ZXJpb3IoKSB7CiAgICAgIGNvbnN0IGlkcyA9IHRoaXMuZWxlbWVudHMubWFwKGVsZW1lbnQgPT4gZWxlbWVudC5pZCkKICAgICAgY29uc3QgaWR4T2ZTZWxlY3RlZCA9IGlkcy5pbmRleE9mKHRoaXMuc2VsZWN0ZWQpCiAgICAgIGlmIChpZHhPZlNlbGVjdGVkID4gMCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBpZHNbaWR4T2ZTZWxlY3RlZCAtIDFdCiAgICAgIH0KICAgIH0sCiAgICBjbGlja1NpZ3VpZW50ZSgpIHsKICAgICAgaWYgKHRoaXMuaXNMYXN0KSByZXR1cm4KICAgICAgY29uc3QgaWRzID0gdGhpcy5lbGVtZW50cy5tYXAoZSA9PiBlLmlkKQogICAgICBjb25zdCBpZHggPSBpZHMuaW5kZXhPZih0aGlzLnNlbGVjdGVkKQogICAgICBpZiAoaWR4IDwgaWRzLmxlbmd0aCAtIDEpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkID0gaWRzW2lkeCArIDFdCiAgICAgIH0KICAgIH0sCiAgICBnZXRWaXNpYmxlQ2FyZHNDb3VudCgpIHsKICAgICAgY29uc3Qgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aAogICAgICAvLyBTaW11bGEgQm9vdHN0cmFwOiB4bCDiiaUgMTIwMHB4LCBsZyDiiaUgOTkycHgKICAgICAgaWYgKHdpZHRoID49IDEyMDApIHJldHVybiAzIC8vIGNvbC14bC0zCiAgICAgIGlmICh3aWR0aCA+PSA5OTIpIHJldHVybiAyIC8vIGNvbC1sZy00CiAgICAgIGlmICh3aWR0aCA+PSA3NjgpIHJldHVybiAyIC8vIHN1cG9uZ2Ftb3MgY29sLW1kLTYKICAgICAgcmV0dXJuIDEgLy8gbcOzdmlsZXMKICAgIH0sCiAgICBnZXRWaXNpYmxlU2xpZGVzKCkgewogICAgICBjb25zdCBjbGFzZXMgPSB0aGlzLmNvbHVtbmFzLnNwbGl0KCcgJykKICAgICAgbGV0IGNvbHMgPSAxMiAvLyB2YWxvciBwb3IgZGVmZWN0bwoKICAgICAgLy8gRGVmaW5pciBicmVha3BvaW50cyBkZSBCb290c3RyYXAKICAgICAgY29uc3Qgd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aAogICAgICBsZXQgY2xhc2VBY3RpdmEgPSBudWxsCgogICAgICAvLyBCdXNjYXIgbGEgY2xhc2UgbcOhcyBlc3BlY8OtZmljYSBzZWfDum4gZWwgYW5jaG8KICAgICAgaWYgKHdpZHRoID49IDEyMDApIHsKICAgICAgICBjbGFzZUFjdGl2YSA9IGNsYXNlcy5maW5kKGMgPT4gYy5zdGFydHNXaXRoKCdjb2wteGwtJykpCiAgICAgIH0KICAgICAgaWYgKCFjbGFzZUFjdGl2YSAmJiB3aWR0aCA+PSA5OTIpIHsKICAgICAgICBjbGFzZUFjdGl2YSA9IGNsYXNlcy5maW5kKGMgPT4gYy5zdGFydHNXaXRoKCdjb2wtbGctJykpCiAgICAgIH0KICAgICAgaWYgKCFjbGFzZUFjdGl2YSAmJiB3aWR0aCA+PSA3NjgpIHsKICAgICAgICBjbGFzZUFjdGl2YSA9IGNsYXNlcy5maW5kKGMgPT4gYy5zdGFydHNXaXRoKCdjb2wtbWQtJykpCiAgICAgIH0KICAgICAgaWYgKCFjbGFzZUFjdGl2YSAmJiB3aWR0aCA+PSA1NzYpIHsKICAgICAgICBjbGFzZUFjdGl2YSA9IGNsYXNlcy5maW5kKGMgPT4gYy5zdGFydHNXaXRoKCdjb2wtc20tJykpCiAgICAgIH0KICAgICAgaWYgKCFjbGFzZUFjdGl2YSkgewogICAgICAgIGNsYXNlQWN0aXZhID0gY2xhc2VzLmZpbmQoCiAgICAgICAgICBjID0+IGMuc3RhcnRzV2l0aCgnY29sLScpICYmICFjLm1hdGNoKC9jb2wtKHNtfG1kfGxnfHhsKS0vKSwKICAgICAgICApCiAgICAgIH0KCiAgICAgIC8vIEV4dHJhZXIgZWwgbsO6bWVybyBkZSBjb2x1bW5hcyBkZSBsYSBjbGFzZSBhY3RpdmEKICAgICAgaWYgKGNsYXNlQWN0aXZhKSB7CiAgICAgICAgY29uc3QgbWF0Y2ggPSBjbGFzZUFjdGl2YS5tYXRjaCgvY29sKD86LSg/OnNtfG1kfGxnfHhsKSk/LShcZCspLykKICAgICAgICBpZiAobWF0Y2gpIHsKICAgICAgICAgIGNvbHMgPSBwYXJzZUludChtYXRjaFsxXSkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIC8vIENhbGN1bGFyIGN1w6FudG9zIHNsaWRlcyBjYWJlbgogICAgICByZXR1cm4gTWF0aC5mbG9vcigxMiAvIGNvbHMpCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgaWYgKHRoaXMuZWxlbWVudHMubGVuZ3RoICYmICF0aGlzLnNlbGVjdGVkKSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IHRoaXMuZWxlbWVudHNbMF0uaWQKICAgICAgfQogICAgICAvLyBPcGNpb25hbDogcmVjYWxjdWxhciBhbCBjYW1iaWFyIGVsIHRhbWHDsW8gZGUgcGFudGFsbGEKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuJGZvcmNlVXBkYXRlKQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["SlyderF.vue"],"names":[],"mappings":";AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SlyderF.vue","sourceRoot":"node_modules/ecored-pkg-fliz/plugin/components","sourcesContent":["<template lang=\"pug\">\n\n  .slyder-f\n    .slyder-f__btn.pe-3(\n      @click=\"clickAnterior\"\n      :class=\"{ 'is-disabled': isFirst }\"\n    )\n      i.fas.fa-chevron-left\n  \n    .slyder-f__main(:id=\"'slyder-f-' + mainId\")\n      ScrollHorizontal(\n        v-if=\"elements.length && rendered\" \n        :selectedId=\"'sl-' + selected\"\n        row\n      )\n        .slyder-f__slyde(\n          v-for=\"(item, index) in elements\"\n          :key=\"'sl-key-'+item.id\"\n          :id=\"'sl-'+item.id\"\n          :class=\"columnas\"\n          v-child=\"item.elm\"\n        )\n  \n    .slyder-f__btn.ps-3(\n      @click=\"clickSiguiente\"\n      :class=\"{ 'is-disabled': isLast }\"\n    )\n      i.fas.fa-chevron-right\n  \n    .hidden-slot\n      slot\n  </template>\n\n<script>\nimport ScrollHorizontal from './ScrollHorizontal'\nimport componentSlotMixins from './componentSlotMixins'\nimport slyderMixins from './slyderMixins'\nexport default {\n  name: 'SlyderF',\n  components: { ScrollHorizontal },\n  mixins: [componentSlotMixins, slyderMixins],\n  props: {\n    columnas: {\n      type: String,\n      default: '',\n    },\n  },\n  computed: {\n    isFirst() {\n      if (!this.elements.length) return true\n      return this.selected === this.elements[0].id\n    },\n    isLast() {\n      if (!this.elements.length) return true\n      //const visibleCount = this.getVisibleCardsCount()\n      const visibles = this.getVisibleSlides()\n      console.log('visibles', visibles)\n\n      const ids = this.elements.map(e => e.id)\n      const idx = ids.indexOf(this.selected)\n      return idx >= ids.length - visibles\n    },\n  },\n  methods: {\n    clickAnterior() {\n      const ids = this.elements.map(element => element.id)\n      const idxOfSelected = ids.indexOf(this.selected)\n      if (idxOfSelected > 0) {\n        this.selected = ids[idxOfSelected - 1]\n      }\n    },\n    clickSiguiente() {\n      if (this.isLast) return\n      const ids = this.elements.map(e => e.id)\n      const idx = ids.indexOf(this.selected)\n      if (idx < ids.length - 1) {\n        this.selected = ids[idx + 1]\n      }\n    },\n    getVisibleCardsCount() {\n      const width = window.innerWidth\n      // Simula Bootstrap: xl ≥ 1200px, lg ≥ 992px\n      if (width >= 1200) return 3 // col-xl-3\n      if (width >= 992) return 2 // col-lg-4\n      if (width >= 768) return 2 // supongamos col-md-6\n      return 1 // móviles\n    },\n    getVisibleSlides() {\n      const clases = this.columnas.split(' ')\n      let cols = 12 // valor por defecto\n\n      // Definir breakpoints de Bootstrap\n      const width = window.innerWidth\n      let claseActiva = null\n\n      // Buscar la clase más específica según el ancho\n      if (width >= 1200) {\n        claseActiva = clases.find(c => c.startsWith('col-xl-'))\n      }\n      if (!claseActiva && width >= 992) {\n        claseActiva = clases.find(c => c.startsWith('col-lg-'))\n      }\n      if (!claseActiva && width >= 768) {\n        claseActiva = clases.find(c => c.startsWith('col-md-'))\n      }\n      if (!claseActiva && width >= 576) {\n        claseActiva = clases.find(c => c.startsWith('col-sm-'))\n      }\n      if (!claseActiva) {\n        claseActiva = clases.find(\n          c => c.startsWith('col-') && !c.match(/col-(sm|md|lg|xl)-/),\n        )\n      }\n\n      // Extraer el número de columnas de la clase activa\n      if (claseActiva) {\n        const match = claseActiva.match(/col(?:-(?:sm|md|lg|xl))?-(\\d+)/)\n        if (match) {\n          cols = parseInt(match[1])\n        }\n      }\n\n      // Calcular cuántos slides caben\n      return Math.floor(12 / cols)\n    },\n    mounted() {\n      if (this.elements.length && !this.selected) {\n        this.selected = this.elements[0].id\n      }\n      // Opcional: recalcular al cambiar el tamaño de pantalla\n      window.addEventListener('resize', this.$forceUpdate)\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.slyder-f__btn.is-disabled\n  opacity: 0.1\n  pointer-events: none\n</style>\n"]}]}